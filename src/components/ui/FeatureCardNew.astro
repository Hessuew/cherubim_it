---
interface Props {
  title?: string;
  description?: string;
  icons?: {
    icon: string;
    label: string;
    color: string;
  }[];
}

const {
  title = await Astro.slots.render('title'),
  description = await Astro.slots.render('description'),
  icons = [],
} = Astro.props;
---

<div
  class="feature-card card animated w-[470px] h-[400px] relative overflow-hidden rounded-xl border border-gray-700 transition-all duration-200 hover:border-gray-600"
>
  <div class="card-content p-9">
    <h2 class="text-2xl font-bold text-white mb-4" set:html={title} />
    <p class="text-muted text-sm mb-6" set:html={description} />

    {
      icons.length > 0 && (
        <div class="flex flex-col gap-2 mt-8">
          {icons.map((item) => (
            <div class="platform-item flex items-center gap-2 bg-[#2a3441]/50 rounded p-2 pl-3">
              <span class={`w-5 text-center text-${item.color}`} set:html={item.icon} />
              <span class="text-white" set:html={item.label} />
            </div>
          ))}
        </div>
      )
    }

    <slot />
  </div>
</div>

<style>
  .feature-card {
    background: linear-gradient(135deg, #3a3b40 0%, #2a3441 25%, #191d24 50%, #000000 75%, black 100%);
    box-shadow: 0 10px 30px -10px rgba(0, 0, 0, 0.3);
    transition:
      transform 0.3s ease,
      box-shadow 0.3s ease;
  }

  .feature-card:hover {
    box-shadow: 0 15px 35px -10px rgba(0, 0, 0, 0.4);
  }
</style>
